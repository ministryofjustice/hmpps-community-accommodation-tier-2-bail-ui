{% from "govuk/components/notification-banner/macro.njk" import govukNotificationBanner %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{%- from "govuk/components/fieldset/macro.njk" import govukFieldset -%}
{%- from "govuk/components/input/macro.njk" import govukInput -%}

{% extends "../layout.njk" %}

{% block content %}

  <div class="govuk-grid-row">
    <div class="{{ columnClasses | default("govuk-grid-column-two-thirds") }}">
      {{ showErrorSummary(errorSummary) }}

      {% if successMessages %}
        {% for message in successMessages %}
          {{ govukNotificationBanner({
                html: '<h3 class="govuk-!-margin-top-2">' + message + '</h3>',
                type: 'success',
                titleId: 'success-title'
              }) }}
        {% endfor %}
      {% endif %}
      <h1 class="govuk-heading-l govuk-!-margin-bottom-4">{{ page.title }}</h1>
      <div class="govuk-body">
        <p>Add one offence at a time. For example, you should record 3 drug-related offences as 3 separate offences.</p>
      </div>

      <div data-module="moj-add-another">
        <form id="form" action="{{ paths.applications.pages.update({ id: applicationId, task: page.taskName, page: page.name }) }}?_method=PUT" method="post" autocomplete="off">
          <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>

                <p>{{ errors.length }}</p>
          {% if allegedOffences | length %}
            {% for off in allegedOffences %}
              {% call govukFieldset({
                classes: "moj-add-another__item",
                legend: {
                  text: "Alleged Offence",
                  classes: "moj-add-another__title govuk-fieldset__legend--m",
                  isPageHeading: false
                }
              }) %}
                {{ govukInput({
                  id: "allegedOffences[" + loop.index0 + "][name]",
                  name: "allegedOffences[" + loop.index0 + "][name]",
                  label: {
                    html: "Current alleged offence name",
                    classes: "govuk-!-font-weight-bold"
                  },
                  value: allegedOffences[loop.index0].name,
                  errorMessage: errors["allegedOffences[" + loop.index0 + "][name]"],
                  attributes: {
                    "data-name": "allegedOffences[%index%][name]",
                    "data-id": "allegedOffences[%index%][name]"
                  }
                }) }}

              {% endcall %}
            {% endfor %}
          {% else %}
            {% call govukFieldset({
              classes: "moj-add-another__item",
              legend: {
                text: "Alleged Offence",
                classes: "moj-add-another__title govuk-fieldset__legend--m",
                isPageHeading: false
              }
            }) %}
              {{ formPageInput(
                {
                  label: {
                    html: "Current alleged offence name",
                    classes: "govuk-!-font-weight-bold"
                  },
                  attributes: {
                    "data-name": "allegedOffences[%index%][name]",
                    "data-id": "allegedOffences[%index%][name]"
                  },
                  fieldName: "allegedOffences[0][name]"
                },
                fetchContext()
              ) }}

            {% endcall %}
          {% endif %}

          <div class="moj-button-action">
            {{ govukButton({
              text: "Save and add another",
              classes: "govuk-button--secondary moj-add-another__add-button govuk-!-margin-bottom-4",
              type: "button"
            }) }}
          </div>

          {% block button %}
            <div class="govuk-button-group">
              {{ govukButton({
                    text: "Save and continue"
                }) }}
            </div>
          {% endblock %}
        </form>
      </div>
    </div>
  </div>

{% endblock %}
